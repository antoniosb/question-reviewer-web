// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pages > App Render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Adapter
        className="app"
      >
        <Adapter
          className="app-header"
        >
          <Connect(AppHeader) />
        </Adapter>
        <Adapter
          className="app-content"
        >
          <div>
            <Switch>
              <Connect(PrivateRoute)
                component={[Function]}
                exact={true}
                path="/"
              />
              <Connect(PrivateRoute)
                component={[Function]}
                exact={true}
                path="/questions"
              />
              <Connect(PrivateRoute)
                component={[Function]}
                exact={true}
                path="/questions/:id"
              />
              <Route
                component={[Function]}
                path="/login"
              />
              <Route
                component={[Function]}
                path="/signUp"
              />
              <Route
                component={[Function]}
              />
            </Switch>
          </div>
        </Adapter>
        <Adapter
          className="app-footer"
        >
          Banco de Questões ©2018 criado por Hermógenes Ferreira
        </Adapter>
      </Adapter>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Adapter
            className="app-header"
          >
            <Connect(AppHeader) />
          </Adapter>,
          <Adapter
            className="app-content"
          >
            <div>
              <Switch>
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions/:id"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signUp"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </div>
          </Adapter>,
          <Adapter
            className="app-footer"
          >
            Banco de Questões ©2018 criado por Hermógenes Ferreira
          </Adapter>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(AppHeader) />,
            "className": "app-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div>
              <Switch>
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions/:id"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signUp"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </div>,
            "className": "app-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Switch>
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions/:id"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signUp"
                />
                <Route
                  component={[Function]}
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions"
                  />,
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions/:id"
                  />,
                  <Route
                    component={[Function]}
                    path="/login"
                  />,
                  <Route
                    component={[Function]}
                    path="/signUp"
                  />,
                  <Route
                    component={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/questions",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/questions/:id",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "login",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/login",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "signUp",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/signUp",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Banco de Questões ©2018 criado por Hermógenes Ferreira",
            "className": "app-footer",
          },
          "ref": null,
          "rendered": "Banco de Questões ©2018 criado por Hermógenes Ferreira",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Adapter
          className="app"
        >
          <Adapter
            className="app-header"
          >
            <Connect(AppHeader) />
          </Adapter>
          <Adapter
            className="app-content"
          >
            <div>
              <Switch>
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions"
                />
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/questions/:id"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signUp"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </div>
          </Adapter>
          <Adapter
            className="app-footer"
          >
            Banco de Questões ©2018 criado por Hermógenes Ferreira
          </Adapter>
        </Adapter>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Adapter
              className="app-header"
            >
              <Connect(AppHeader) />
            </Adapter>,
            <Adapter
              className="app-content"
            >
              <div>
                <Switch>
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions"
                  />
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions/:id"
                  />
                  <Route
                    component={[Function]}
                    path="/login"
                  />
                  <Route
                    component={[Function]}
                    path="/signUp"
                  />
                  <Route
                    component={[Function]}
                  />
                </Switch>
              </div>
            </Adapter>,
            <Adapter
              className="app-footer"
            >
              Banco de Questões ©2018 criado por Hermógenes Ferreira
            </Adapter>,
          ],
          "className": "app",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Connect(AppHeader) />,
              "className": "app-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <div>
                <Switch>
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions"
                  />
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions/:id"
                  />
                  <Route
                    component={[Function]}
                    path="/login"
                  />
                  <Route
                    component={[Function]}
                    path="/signUp"
                  />
                  <Route
                    component={[Function]}
                  />
                </Switch>
              </div>,
              "className": "app-content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Switch>
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions"
                  />
                  <Connect(PrivateRoute)
                    component={[Function]}
                    exact={true}
                    path="/questions/:id"
                  />
                  <Route
                    component={[Function]}
                    path="/login"
                  />
                  <Route
                    component={[Function]}
                    path="/signUp"
                  />
                  <Route
                    component={[Function]}
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Connect(PrivateRoute)
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Connect(PrivateRoute)
                      component={[Function]}
                      exact={true}
                      path="/questions"
                    />,
                    <Connect(PrivateRoute)
                      component={[Function]}
                      exact={true}
                      path="/questions/:id"
                    />,
                    <Route
                      component={[Function]}
                      path="/login"
                    />,
                    <Route
                      component={[Function]}
                      path="/signUp"
                    />,
                    <Route
                      component={[Function]}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/questions",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/questions/:id",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "login",
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/login",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "signUp",
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/signUp",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Banco de Questões ©2018 criado por Hermógenes Ferreira",
              "className": "app-footer",
            },
            "ref": null,
            "rendered": "Banco de Questões ©2018 criado por Hermógenes Ferreira",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
